{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-esp.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","actions/events.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword1","rPassword2","rName","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","nowPlus1","clone","initEvent","notes","start","toDate","end","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","eventAddNew","id","_id","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","events","startAccessor","endAccessor","eventPropGetter","finish","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","console","log","onSelectEvent","onView","view","components","PublicRoute","isAuthenticate","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","getDate","bgcolor","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63ec2f0a.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventAddNew: '[event] Add new',\r\n\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n\r\n}","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async(dispatch) => {\r\n        //console.log(email, password);\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-data', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-data', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport {useDispatch} from 'react-redux'\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'javier@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rEmail: 'fcobo@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n        rName: 'Francisco',\r\n    });\r\n\r\n    const {lEmail, lPassword}=formLoginValues;\r\n    const {rEmail, rPassword1,rPassword2,rName }=formRegisterValues;\r\n\r\n    const handleLogin=(e)=>{\r\n       // console.log(formLoginValues);\r\n        e.preventDefault();\r\n       dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister=(e)=>{\r\n        e.preventDefault();\r\n        \r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('error', 'Contraseñas deben ser iguales' , 'error')\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName))\r\n        \r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nexport const NavBar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleLogout=()=>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n            className=\"btn btn-outline-danger\"\r\n            onClick={handleLogout}\r\n            \r\n            >\r\n            <i className=\"fas fa-sign-out-alt\"></i>    \r\n               <span> Salir</span> \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user}=event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>-{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventUpdated( formValues ) )\r\n        } else {\r\n            dispatch( eventAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'Fernando'\r\n                }\r\n            }) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                        placeholder=\"TÃ­tulo del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventDeleted = () => ({ type: types.eventDeleted });","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew=()=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-primary fab\"\r\n        onClick={handleClickNew}\r\n        >\r\n        <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventDeleted() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { NavBar } from '../ui/NavBar'\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-esp';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n/*\r\nconst events = [{\r\n    title: 'Cumpleaños del webo',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'comprar el pastel',\r\n    user:{\r\n            _id: '1234',\r\n            name: 'Javier'\r\n    }\r\n}];\r\n*/\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const onDoubleClick=(e)=>{\r\n        console.log('double', e);\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent=(e)=>{\r\n       dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange=(e)=>{\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const eventStyleGetter=(event, start, finish, isSelected)=>{\r\n            const style ={\r\n                backgroundColor: '#367CF7',\r\n                borderRadius: '0px',\r\n                opacity: 0.8,\r\n                display: 'block',\r\n                color: 'white',\r\n            }\r\n\r\n            return{\r\n                style\r\n            }\r\n                \r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            \r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            \r\n\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <DeleteEventFab/>\r\n            \r\n            <AddNewFab/>\r\n            <CalendarModal/>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticate,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component={ (props) => (\r\n            ( isAuthenticate )\r\n                ?( <Redirect to=\"/\" /> ) \r\n                :( <Component { ...props } /> )\r\n                 \r\n        )}\r\n\r\n        />\r\n\r\n        \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticate: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n        isAuthenticate,\r\n        component: Component,\r\n        ...rest\r\n\r\n    }) => {\r\n\r\n        return ( <\r\n            Route {...rest }\r\n            component = {\r\n                (props) => (\r\n                    (isAuthenticate) ?\r\n                    ( < Component {...props }\r\n                        /> ): ( < Redirect to = \"/login\" / > )\r\n                    )\r\n                }\r\n\r\n                />\r\n\r\n\r\n            )\r\n        }\r\n\r\n        PrivateRoute.propTypes = {\r\n            isAuthenticate: PropTypes.bool.isRequired,\r\n            component: PropTypes.func.isRequired\r\n        }","import React, { useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n\r\n        <Router>\r\n            <div>\r\n                \r\n                <Switch>\r\n                    <PublicRoute \r\n                    exact \r\n                    path=\"/login\" \r\n                    component={LoginScreen}\r\n                    isAuthenticate={!!uid}\r\n                    \r\n                    />\r\n                    \r\n                    \r\n                    \r\n                    <PrivateRoute \r\n                    exact \r\n                    path=\"/\" \r\n                    component={CalendarScreen}\r\n                    isAuthenticate={!!uid}\r\n                    />\r\n                \r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            \r\n            </div>\r\n\r\n        </Router>\r\n\r\n\r\n      \r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import moment from 'moment'\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [{\r\n        id: new Date().getDate(),\r\n        title: 'Cumpleaños del webo',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'comprar el pastel',\r\n        user: {\r\n            _id: '1234',\r\n            name: 'Javier'\r\n        }\r\n    }],\r\n    activeEvent: null\r\n}\r\n\r\nexport const CalendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { CalendarReducer } from './calendarReducer'\r\nimport { authReducer } from './authReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: CalendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles.css'\nimport { CalendarApp } from './CalendarApp';\nconsole.log(process.env.REACT_APP_API_URL)\nReactDOM.render(\n\n    <CalendarApp />,\n\n    document.getElementById('root')\n);"],"sourceRoot":""}